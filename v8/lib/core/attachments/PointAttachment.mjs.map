{"version":3,"file":"PointAttachment.mjs","sources":["../../../src/core/attachments/PointAttachment.ts"],"sourcesContent":["import { Attachment, VertexAttachment } from './Attachment';\r\nimport { AttachmentType, Color, MathUtils, Vector2 } from '@pixi-spine/base';\r\nimport type { Bone } from '../Bone';\r\n\r\n/**\r\n * @public\r\n */\r\nexport class PointAttachment extends VertexAttachment {\r\n    type = AttachmentType.Point;\r\n\r\n    x = 0;\r\n    y = 0;\r\n    rotation = 0;\r\n\r\n    /** The color of the point attachment as it was in Spine. Available only when nonessential data was exported. Point attachments\r\n     * are not usually rendered at runtime. */\r\n    color = new Color(0.38, 0.94, 0, 1);\r\n\r\n    constructor(name: string) {\r\n        super(name);\r\n    }\r\n\r\n    computeWorldPosition(bone: Bone, point: Vector2) {\r\n        const mat = bone.matrix;\r\n\r\n        point.x = this.x * mat.a + this.y * mat.c + bone.worldX;\r\n        point.y = this.x * mat.b + this.y * mat.d + bone.worldY;\r\n\r\n        return point;\r\n    }\r\n\r\n    computeWorldRotation(bone: Bone) {\r\n        const mat = bone.matrix;\r\n        const cos = MathUtils.cosDeg(this.rotation);\r\n        const sin = MathUtils.sinDeg(this.rotation);\r\n        const x = cos * mat.a + sin * mat.c;\r\n        const y = cos * mat.b + sin * mat.d;\r\n\r\n        return Math.atan2(y, x) * MathUtils.radDeg;\r\n    }\r\n\r\n    copy(): Attachment {\r\n        const copy = new PointAttachment(this.name);\r\n\r\n        copy.x = this.x;\r\n        copy.y = this.y;\r\n        copy.rotation = this.rotation;\r\n        copy.color.setFromColor(this.color);\r\n\r\n        return copy;\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AAOO,MAAM,wBAAwB,gBAAiB,CAAA;AAAA,EAWlD,YAAY,IAAc,EAAA;AACtB,IAAA,KAAA,CAAM,IAAI,CAAA,CAAA;AAXd,IAAA,IAAA,CAAA,IAAA,GAAO,cAAe,CAAA,KAAA,CAAA;AAEtB,IAAI,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACJ,IAAI,IAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AACJ,IAAW,IAAA,CAAA,QAAA,GAAA,CAAA,CAAA;AAIX;AAAA;AAAA,IAAA,IAAA,CAAA,KAAA,GAAQ,IAAI,KAAA,CAAM,IAAM,EAAA,IAAA,EAAM,GAAG,CAAC,CAAA,CAAA;AAAA,GAIlC;AAAA,EAEA,oBAAA,CAAqB,MAAY,KAAgB,EAAA;AAC7C,IAAA,MAAM,MAAM,IAAK,CAAA,MAAA,CAAA;AAEjB,IAAM,KAAA,CAAA,CAAA,GAAI,KAAK,CAAI,GAAA,GAAA,CAAI,IAAI,IAAK,CAAA,CAAA,GAAI,GAAI,CAAA,CAAA,GAAI,IAAK,CAAA,MAAA,CAAA;AACjD,IAAM,KAAA,CAAA,CAAA,GAAI,KAAK,CAAI,GAAA,GAAA,CAAI,IAAI,IAAK,CAAA,CAAA,GAAI,GAAI,CAAA,CAAA,GAAI,IAAK,CAAA,MAAA,CAAA;AAEjD,IAAO,OAAA,KAAA,CAAA;AAAA,GACX;AAAA,EAEA,qBAAqB,IAAY,EAAA;AAC7B,IAAA,MAAM,MAAM,IAAK,CAAA,MAAA,CAAA;AACjB,IAAA,MAAM,GAAM,GAAA,SAAA,CAAU,MAAO,CAAA,IAAA,CAAK,QAAQ,CAAA,CAAA;AAC1C,IAAA,MAAM,GAAM,GAAA,SAAA,CAAU,MAAO,CAAA,IAAA,CAAK,QAAQ,CAAA,CAAA;AAC1C,IAAA,MAAM,CAAI,GAAA,GAAA,GAAM,GAAI,CAAA,CAAA,GAAI,MAAM,GAAI,CAAA,CAAA,CAAA;AAClC,IAAA,MAAM,CAAI,GAAA,GAAA,GAAM,GAAI,CAAA,CAAA,GAAI,MAAM,GAAI,CAAA,CAAA,CAAA;AAElC,IAAA,OAAO,IAAK,CAAA,KAAA,CAAM,CAAG,EAAA,CAAC,IAAI,SAAU,CAAA,MAAA,CAAA;AAAA,GACxC;AAAA,EAEA,IAAmB,GAAA;AACf,IAAA,MAAM,IAAO,GAAA,IAAI,eAAgB,CAAA,IAAA,CAAK,IAAI,CAAA,CAAA;AAE1C,IAAA,IAAA,CAAK,IAAI,IAAK,CAAA,CAAA,CAAA;AACd,IAAA,IAAA,CAAK,IAAI,IAAK,CAAA,CAAA,CAAA;AACd,IAAA,IAAA,CAAK,WAAW,IAAK,CAAA,QAAA,CAAA;AACrB,IAAK,IAAA,CAAA,KAAA,CAAM,YAAa,CAAA,IAAA,CAAK,KAAK,CAAA,CAAA;AAElC,IAAO,OAAA,IAAA,CAAA;AAAA,GACX;AACJ;;;;"}