{"version":3,"file":"IkConstraintData.js","sources":["../../src/core/IkConstraintData.ts"],"sourcesContent":["import { ConstraintData } from './ConstraintData';\r\nimport type { BoneData } from './BoneData';\r\n\r\n/** Stores the setup pose for an {@link IkConstraint}.\r\n * <p>\r\n * See [IK constraints](http://esotericsoftware.com/spine-ik-constraints) in the Spine User Guide.\r\n * @public\r\n * */\r\nexport class IkConstraintData extends ConstraintData {\r\n    /** The bones that are constrained by this IK constraint. */\r\n    bones = new Array<BoneData>();\r\n\r\n    /** The bone that is the IK target. */\r\n    private _target: BoneData | null = null;\r\n    public set target(boneData: BoneData) {\r\n        this._target = boneData;\r\n    }\r\n    public get target() {\r\n        if (!this._target) throw new Error('BoneData not set.');\r\n        else return this._target;\r\n    }\r\n\r\n    /** Controls the bend direction of the IK bones, either 1 or -1. */\r\n    bendDirection = 1;\r\n\r\n    /** When true and only a single bone is being constrained, if the target is too close, the bone is scaled to reach it. */\r\n    compress = false;\r\n\r\n    /** When true, if the target is out of range, the parent bone is scaled to reach it. If more than one bone is being constrained\r\n     * and the parent bone has local nonuniform scale, stretch is not applied. */\r\n    stretch = false;\r\n\r\n    /** When true, only a single bone is being constrained, and {@link #getCompress()} or {@link #getStretch()} is used, the bone\r\n     * is scaled on both the X and Y axes. */\r\n    uniform = false;\r\n\r\n    /** A percentage (0-1) that controls the mix between the constrained and unconstrained rotations. */\r\n    mix = 1;\r\n\r\n    /** For two bone IK, the distance from the maximum reach of the bones that rotation will slow. */\r\n    softness = 0;\r\n\r\n    constructor(name: string) {\r\n        super(name, 0, false);\r\n    }\r\n}\r\n"],"names":["ConstraintData"],"mappings":";;;;AAQO,MAAM,yBAAyBA,6BAAe,CAAA;AAAA,EAkCjD,YAAY,IAAc,EAAA;AACtB,IAAM,KAAA,CAAA,IAAA,EAAM,GAAG,KAAK,CAAA,CAAA;AAjCxB;AAAA,IAAA,IAAA,CAAA,KAAA,GAAQ,IAAI,KAAgB,EAAA,CAAA;AAG5B;AAAA,IAAA,IAAA,CAAQ,OAA2B,GAAA,IAAA,CAAA;AAUnC;AAAA,IAAgB,IAAA,CAAA,aAAA,GAAA,CAAA,CAAA;AAGhB;AAAA,IAAW,IAAA,CAAA,QAAA,GAAA,KAAA,CAAA;AAIX;AAAA;AAAA,IAAU,IAAA,CAAA,OAAA,GAAA,KAAA,CAAA;AAIV;AAAA;AAAA,IAAU,IAAA,CAAA,OAAA,GAAA,KAAA,CAAA;AAGV;AAAA,IAAM,IAAA,CAAA,GAAA,GAAA,CAAA,CAAA;AAGN;AAAA,IAAW,IAAA,CAAA,QAAA,GAAA,CAAA,CAAA;AAAA,GAIX;AAAA,EA9BA,IAAW,OAAO,QAAoB,EAAA;AAClC,IAAA,IAAA,CAAK,OAAU,GAAA,QAAA,CAAA;AAAA,GACnB;AAAA,EACA,IAAW,MAAS,GAAA;AAChB,IAAA,IAAI,CAAC,IAAK,CAAA,OAAA;AAAS,MAAM,MAAA,IAAI,MAAM,mBAAmB,CAAA,CAAA;AAAA;AACjD,MAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GACrB;AAyBJ;;;;"}